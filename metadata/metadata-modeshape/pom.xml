<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.thinkbiganalytics.metadata</groupId>
        <artifactId>thinkbig-metadata</artifactId>
        <version>0.4.0</version>
    </parent>
    <artifactId>thinkbig-metadata-modeshape</artifactId>

    <properties>
        <modeshape.version>5.0.0.Final</modeshape.version>
        <jdbc.h2.version>1.2.124</jdbc.h2.version>
        <jdbc.mysql.version>5.1.32</jdbc.mysql.version>
    </properties>

    <repositories>
        <repository>
            <id>jboss-public</id>
            <name>jboss-public</name>
            <url>http://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>pentaho-releases</id>
            <url>http://repository.pentaho.org/artifactory/repo/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.thinkbiganalytics.metadata</groupId>
            <artifactId>thinkbig-metadata-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thinkbiganalytics.metadata</groupId>
            <artifactId>thinkbig-metadata-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thinkbiganalytics.datalake</groupId>
            <artifactId>thinkbig-sla-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thinkbiganalytics.datalake</groupId>
            <artifactId>thinkbig-security-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thinkbiganalytics.datalake</groupId>
            <artifactId>thinkbig-security-auth</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.thinkbiganalytics.datalake</groupId>
            <artifactId>thinkbig-classname-change-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <!-- need to use a later version of HikariCP because of this bug: 
            https://github.com/brettwooldridge/HikariCP/issues/495 -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.zaxxer</groupId>
                    <artifactId>HikariCP</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>2.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
        </dependency>
        <!-- <dependency> <groupId>org.modeshape</groupId> <artifactId>modeshape-web-explorer</artifactId> 
            </dependency> -->
        <!--This examples uses Infinispan's JDBC cache store, which requires 
            C3P0 and a JDBC database driver -->
        <!-- <dependency> <groupId>org.infinispan</groupId> <artifactId>infinispan-cachestore-jdbc</artifactId> 
            </dependency> <dependency> <groupId>com.mchange</groupId> <artifactId>c3p0</artifactId> 
            </dependency> -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
        </dependency>


        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${jdbc.mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${jdbc.h2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-core</artifactId>
            <version>1.0.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-remote-shell</artifactId>
            <version>1.3.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>

        <!-- temporary -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>logback-classic</artifactId>
                    <groupId>ch.qos.logback</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j-over-slf4j</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Import the ModeShape BOM for embedded usage. This adds to 
                the "dependenciesManagement" section defaults for all of the modules we might 
                need, but we still have to include in the "dependencies" section the modules 
                we DO need. The benefit is that we don't have to specify the versions of 
                any of those modules. -->
            <dependency>
                <groupId>org.modeshape.bom</groupId>
                <artifactId>modeshape-bom-embedded</artifactId>
                <version>${modeshape.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>